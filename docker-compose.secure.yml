version: '2'
services:
  head:
    image: hdfgroup/hsds
    container_name: hsds_head
    restart: ${RESTART_POLICY}
    mem_limit: ${HEAD_RAM}
    environment:
      - AWS_IAM_ROLE=${AWS_IAM_ROLE}
      - TARGET_SN_COUNT=${CORES}
      - TARGET_DN_COUNT=${CORES}
      - HEAD_PORT=${HEAD_PORT}
      - HEAD_HOST=hsds_head
      - NODE_TYPE=head_node
      - AWS_S3_GATEWAY=${AWS_S3_GATEWAY}
      - AWS_REGION=${AWS_REGION}
      - BUCKET_NAME=${BUCKET_NAME}
      - LOG_LEVEL=${LOG_LEVEL}
    ports:
      - ${HEAD_PORT}:${HEAD_PORT}
    depends_on:
    - proxy
  dn:
    image: hdfgroup/hsds
    restart: ${RESTART_POLICY}
    mem_limit: ${DN_RAM}
    environment:
      - AWS_IAM_ROLE=${AWS_IAM_ROLE}
      - DN_PORT=${DN_PORT}
      - DN_HOST=${PUBLIC_DNS}
      - NODE_TYPE=dn
      - AWS_S3_GATEWAY=${AWS_S3_GATEWAY}
      - AWS_REGION=${AWS_REGION}
      - BUCKET_NAME=${BUCKET_NAME}
      - LOG_LEVEL=${LOG_LEVEL}
      - CHUNK_MEM_CACHE_SIZE=${CHUNK_MEM_CACHE_SIZE}
      - MAX_CHUNK_SIZE=${MAX_CHUNK_SIZE}
      - MAX_CHUNKS_PER_FOLDER=${MAX_CHUNKS_PER_FOLDER}
    depends_on:
      - head
  sn:
    image: hdfgroup/hsds
    restart: ${RESTART_POLICY}
    mem_limit: ${SN_RAM}
    environment:
      - AWS_IAM_ROLE=${AWS_IAM_ROLE}
      - SN_PORT=${SN_PORT}
      - NODE_TYPE=sn
      - AWS_S3_GATEWAY=${AWS_S3_GATEWAY}
      - AWS_DYNAMODB_GATEWAY=${AWS_DYNAMODB_GATEWAY}
      - AWS_REGION=${AWS_REGION}
      - BUCKET_NAME=${BUCKET_NAME}
      - LOG_LEVEL=${LOG_LEVEL}
      - CHUNK_MEM_CACHE_SIZE=${CHUNK_MEM_CACHE_SIZE}
      - MAX_CHUNK_SIZE=${MAX_CHUNK_SIZE}
      - AWS_DYNAMODB_USERS_TABLE=${AWS_DYNAMODB_USERS_TABLE}
      - HSDS_ENDPOINT=${HSDS_ENDPOINT}
      - SN_HOST=${PUBLIC_DNS}
      - PASSWORD_SALT=${PASSWORD_SALT}
      - GREETING=${GREETING}
      - ABOUT=${ABOUT}
      - TOP_LEVEL_DOMAINS=${TOP_LEVEL_DOMAINS}
      - VIRTUAL_HOST=${PUBLIC_DNS}
      - VIRTUAL_PORT=${SN_PORT}
      - LETSENCRYPT_HOST=${PUBLIC_DNS}
      - LETSENCRYPT_EMAIL=jguerrero@teravisiontech.com
      - AUTH_EXPIRATION=${AUTH_EXPIRATION}
      - KRB5_REALM=${KRB5_REALM}
    depends_on:
      - head
  proxy:
    image: nginx
    restart: always
    container_name: hsds_proxy
    volumes:
      - /etc/nginx/certs
      - /etc/nginx/conf.d
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - "80:80"
      - "443:443"
  certs:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: hsds_certs
    environment:
    #- ACME_CA_URI=https://acme-staging.api.letsencrypt.org/directory
    - NGINX_DOCKER_GEN_CONTAINER=hsds_gen
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
    volumes_from:
    - proxy
    depends_on:
    - proxy
  dockergen:
    image: jwilder/docker-gen
    restart: always
    container_name: hsds_gen
    command: -notify-sighup hsds_proxy -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes_from:
      - proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl
