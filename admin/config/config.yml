# HSDS configuration
allow_noauth: true  # enable unauthenticated requests
auth_expiration: -1 # set an expiration for credential caching
default_public: False # new domains are publically readable by default
aws_access_key_id: xxx  # Replace with access key for account or use aws_iam_role
aws_secret_access_key: xxx   # Replace with secret key for account
aws_iam_role: hsds_role  # For EC2 using IAM roles
aws_region: us-east-1
hsds_endpoint: http://hsds.hdf.test # used for hateos links in response
head_endpoint: null  # optionally used for nodes to register
aws_s3_gateway: null   # use endpoint for the region HSDS is running in, e.g. 'https://s3.amazonaws.com' for us-east-1
aws_dynamodb_gateway: null # use for dynamodb endpint, e.g. 'https://dynamodb.us-east-1.amazonaws.com',
aws_lambda_gateway: null  #  use lambda endpoint for region HSDS is running in.  See: https://docs.aws.amazon.com/general/latest/gr/lambda-service.html
aws_dynamodb_users_table: null # set to table name if lambda is used to store usernames and passwords
aws_lambda_chunkread_function: null  # name of aws lambda function for chunk reading
aws_lambda_threshold: 4   # number of chunks per node per request to reach before using lambda
aws_lambda_max_invoke: 1000  # max number of lambda functions to invoke simultaneously 
azure_connection_string: null # use for connecting to Azure blob storage
azure_resource_id: null  # resource id for use with Azure Active Directory
root_dir: null   # base directory to use for Posix storage
password_salt: null  # salt value if dynamically generated passwords are used
bucket_name: null   # set to use a default bucket, otherwise bucket param is needed for all requests
head_port: 5100     # port to use for head node
dn_port : 6101  # Start dn ports at 6101
sn_port: 5101   # Start sn ports at 5101
target_sn_count: 4  # number of SN containers
target_dn_count: 4 # number of DN containers
log_level: INFO    # log level.  One of ERROR, WARNING,  INFO, DEBUG 
max_tcp_connections: 100   # max number of inflight tcp connections
head_sleep_time: 10  # max sleep time between health checks for head node
node_sleep_time: 10 # max sleep time between health checks for SN/DN nodes
async_sleep_time: 10  # max sleep time between async task runs
s3_sync_interval: 1  # time to wait to write object data to S3 (in sec)
s3_sync_task_timeout: 10  # time to cancel write task if no response
max_pending_write_requests: 20  # maxium number of inflight write requests
flush_time_out: 10    # max time in sec for flush operation
flush_sleep_interval: 0.1  # time to wait between checking on dirty objects
max_chunks_per_request: 1000  # maximum number of chunks to be serviced by one request
min_chunk_size: 1m  # 1 MB
max_chunk_size: 4m # 4 MB
max_request_size: 100m  # 100 MB - should be no smaller than client_max_body_size in nginx tmpl
max_chunks_per_folder: 200000 # max number of chunks per s3 folder. 0 for unlimiited
max_task_count: 1000  # maximum number of concurrent tasks before server will return 503 error
aio_max_pool_connections: 64  # number of connections to keep in conection pool for aiobotocore requests
metadata_mem_cache_size: 128m  # 128 MB - metadata cache size per DN node
metadata_mem_cache_expire: 3600  # expire cache items after one hour
chunk_mem_cache_size: 128m  # 128 MB - chunk cache size per DN node
chunk_mem_cache_expire: 3600  # expire cache items after one hour
timeout: 30     # http timeout - 30 sec
password_file: /config/passwd.txt  # filepath to a text file of username/passwords. set to '' for no-auth access
groups_file: /config/groups.txt     # filepath to text file defining user groups
server_name: Highly Scalable Data Service (HSDS)  # this gets returned in the about request
greeting: Welcome to HSDS!
about: HSDS is a webservice for HDF data
top_level_domains: []  # list of possible top-level domains, example: ["/home", "/shared"], if empty all top-level folders in default bucket will be returned
cors_domain: "*"     # domains allowed for CORS
admin_user: admin  # user with admin privileges
admin_group: admins  # enable admin privileges for any user in this group
openid_provider: azure  # OpenID authentication provider
openid_audience: null # OpenID audience. This is synonymous with azure_resource_id for azure.
openid_claims: unique_name,appid   # Comma seperated list of claims to resolve to usernames.
chaos_die: 0           # if > 0, have nodes randomly die after n seconds (for testing)
standalone_app: false   # True when run as a single application
blosc_nthreads: 2  # number of threads to use for blosc compression.  Set to 0 to have blosc auto-determine thread count

